buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'com.github.rodm', name: 'gradle-teamcity-plugin', version: '0.8.1'
    }
}

ext {
    teamcityVersion = project.hasProperty('teamcityVersion') ? project.getProperty('teamcityVersion') : '9.1.6'
    teamcityDir = project.hasProperty('teamcityDir') ? project.getProperty('teamcityDir') : "$rootDir/servers/TeamCity-${teamcityVersion}"
    teamcityDataDir = "$rootDir/data/" + (teamcityVersion =~ /(\d+\.\d+).*/)[0][1]
    teamcityJavaHome = System.properties['java.home']
    teamcityGeneratedPoms = "$buildDir/generated-poms"
    teamcityInstall = project.hasProperty("teamcityInstall") ? project.getProperty("teamcityInstall") : false
    teamcityPluginVersion = project.hasProperty("teamcityPluginVersion") ? project.getProperty("teamcityPluginVersion") : '1.0-SNAPSHOT'
    processOutputTranslatorPluginVersion = project.hasProperty("processOutputTranslatorPluginVersion") ? project.getProperty("processOutputTranslatorPluginVersion") : teamcityPluginVersion
}

allprojects {
    group = 'org.jetbrains.teamcity.cmake'
    version = teamcityPluginVersion

    configurations {
        provided
    }

    if (!teamcityInstall) {
        project.tasks.findByName("downloadTeamCity")*.setEnabled(false)
    }
}

subprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repository.jetbrains.com/teamcity" }
        maven {
            url "${rootProject.rootDir}/local-maven"
        }
    }

    apply plugin: 'java'
    sourceCompatibility = "1.6"
    targetCompatibility = "1.6"

    test {
        useTestNG()
    }
    if (System.getenv("TEAMCITY_VERSION") != null) {
        test.ignoreFailures = true
    } else {
        //test.testLogging.showStandardStreams = true
    }
}

apply plugin: 'idea'
//apply from: 'export-teamcity-to-local-maven.gradle'

idea {
    module {
        downloadJavadoc = false
        downloadSources = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}