<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2000-2011 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<parser id="GNU Make output parser" name="jetbrains.buildServer.makerunner.agent.output.MakeRegexpParser">

  <!-- Folding targets -->
  <pattern regex="Making (\S+) in (\S+)" output-expr="$0" severity="SPECIAL" eat-line="true"/>
  <pattern regex=".*make.*: Leaving directory `(.*)'" output-expr="$0" severity="SPECIAL" eat-line="true"/>

  <!-- do nothing-->
  <pattern regex=".*make.*: Entering directory `(.*)'" output-expr="$0" severity="INFO" eat-line="true"/>


  <!-- Makefile errors/warnings -->
  <pattern regex="(.*):(\d*): (\*\*\* .*)" output-expr="In file '$1' at line '$2' : '$3'" severity="ERROR"
           eat-line="true"/>
  <pattern regex="(.*[Mm]akefile):(\d*): warning: (.*)" output-expr="In file '$1' at line '$2' : '$3'" severity="WARN"
           eat-line="true"/>
  <pattern regex="(.*):(\d*): (\S*: No such file or directory)" output-expr="In file '$1' at line '$2' : '$3'"
           severity="WARN" eat-line="true"/>

  <!-- Targets errors/warnings-->
  <pattern regex="No rule to make target `(.*)'\." output-expr="$0"
           severity="ERROR" eat-line="true"/>
  <pattern regex=".*make.*: (Target (.*) not remade because of errors.)" output-expr="$1"
           severity="ERROR" eat-line="true"/>

  <pattern regex=".*make.*: \*\*\* (\[\S+\] .*)" output-expr="$1"
           severity="ERROR" eat-line="true"/>
  <pattern regex=".*make.*:(.*Error.*\(ignored\))" output-expr="$1"
           severity="INFO" eat-line="true"/>
  <pattern regex=".*make.*: \*\*\* (.*)" output-expr="$1"
           severity="ERROR" eat-line="true"/>
  <pattern regex="Error:\s*(.*)" output-expr="$0"
           severity="ERROR" eat-line="true"/>

  <pattern regex=".*command not found.*" output-expr="$0"
           severity="ERROR" eat-line="true"/>
  <pattern regex=".*command not found.*" output-expr="$0"
           severity="ERROR" eat-line="true"/>


  <pattern regex=".*make.*\[.*\] (Error [\-]?\d*.*)" output-expr="$1"
           severity="WARN" eat-line="true"/>
  <pattern regex=".*make.*: (Circular .* dependency dropped.)" output-expr="$1"
           severity="WARN" eat-line="true"/>


  <!--<pattern regex="" output-expr="$0" severity="ERROR" eat-line="true"/>-->
  <!--<pattern regex="" output-expr="$0" severity="WARN" eat-line="true"/>-->
  <!--<pattern regex="" output-expr="$0" severity="INFO" eat-line="true"/>-->
</parser>